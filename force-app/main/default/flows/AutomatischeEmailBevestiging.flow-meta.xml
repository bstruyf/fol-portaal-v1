<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_Action_2</name>
        <label>Send Email Action 2</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>EmailadresContact</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>$Record.CreatedBy.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>SubjectlineEmailtoApotheekteam</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBevestigingTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>SendEmailConfirmation</name>
        <label>SendEmailConfirmation</label>
        <locationX>314</locationX>
        <locationY>863</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>EmailadresContact</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>SubjectLineAfspraakBevestiging</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBevestigingTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>AssigneEmailadresContact</name>
        <label>AssignEmailadresContact</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>EmailadresContact</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetContactData.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckIfEmailadresContactisNull</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ChangeEmailadresContacttoEmailadresApotheekteam</name>
        <label>ChangeEmailadresContacttoEmailadresApotheekteam</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>EmailadresContact</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetContact.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Email_Action_2</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CheckIfEmailadresContactisNull</name>
        <label>CheckIfEmailadresContactisNull</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>SendEmailConfirmation</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Emaildoesnotexist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>EmailadresContact</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContact</targetReference>
            </connector>
            <label>Emaildoesnotexist</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>AutomatischeEmailBevestiging {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AutomatischeEmailBevestiging</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetContact</name>
        <label>GetContact</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ChangeEmailadresContacttoEmailadresApotheekteam</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>LastName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Apotheekteam</stringValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactData</name>
        <label>GetContactData</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssigneEmailadresContact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhoId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetEventData</name>
        <label>GetEventData</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetOwnerData</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Event</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetOwnerData</name>
        <label>GetOwnerData</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetContactData</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetEventData</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CreatedById</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0059N000000KJPEQA4</stringValue>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0052o000009abAWAAY</stringValue>
            </value>
        </filters>
        <object>Event</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>EmailBevestigingTemplate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Beste {!GetContactData.FirstName},

Hierbij bevestig ik de afspraak met {!GetOwnerData.Name} op {!$Record.StartDateTime} in uw apotheek te {!$Record.Account.BillingCity}.

Mocht er iets tussenkomen kan je best rechtstreeks contact opnemen met {!$Record.Owner:User.FirstName} via {!$Record.Owner:User.Email} of {!$Record.Owner:User.MobilePhone}

Met vriendelijke groeten,
{!$Record.CreatedBy.FirstName} {!$Record.CreatedBy.LastName}
{!$Record.CreatedBy.Title}
{!$Record.CreatedBy.Phone}
{!$Record.CreatedBy.Email}</text>
    </textTemplates>
    <textTemplates>
        <name>SubjectLineAfspraakBevestiging</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$Record.Account.Name} - Farmad : bevestiging afspraak met {!GetOwnerData.Name} op {!$Record.StartDateTime}</text>
    </textTemplates>
    <textTemplates>
        <name>SubjectlineEmailtoApotheekteam</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$Record.Account.Name}-FARMAD : t.a.v. {!GetContactData.Name} - Afspraakbevestiging met {!GetOwnerData.Name} op {!$Record.StartDateTime}</text>
    </textTemplates>
    <variables>
        <name>EmailadresContact</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
