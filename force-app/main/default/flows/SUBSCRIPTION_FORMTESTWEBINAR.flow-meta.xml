<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Assignment_2</name>
        <label>UpdateContactEmailwithGeneralEmail</label>
        <locationX>314</locationX>
        <locationY>1538</locationY>
        <assignmentItems>
            <assignToReference>ContactEmailadres</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetGeneralEmailAdres.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetContactBasedOnVariableContactID</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>updates the prefered contact emailadres when a contact doesn&apos;t have an e-mailadres</description>
        <name>UpdateContactEmailadres</name>
        <label>UpdateContactEmailadres</label>
        <locationX>578</locationX>
        <locationY>1430</locationY>
        <assignmentItems>
            <assignToReference>ContactEmailadres</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PersonalEmailInput</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetContactBasedOnVariableContactID</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UpdateContactEmailNewwithGeneralEmail</name>
        <label>UpdateContactEmailwithNewGeneralEmail</label>
        <locationX>50</locationX>
        <locationY>1754</locationY>
        <assignmentItems>
            <assignToReference>ContactEmailadres</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NewGeneralEmailAdres</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetContactBasedOnVariableContactID</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UpdateContactIDVariable</name>
        <label>UpdateContactIDVariable</label>
        <locationX>380</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>ContactIDVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetContactIDFronNewContact.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetGeneralEmailadress</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Check if ContactID exists</description>
        <name>ContactIDExists</name>
        <label>ContactIDExists?</label>
        <locationX>677</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>EmailadresExists</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>ContactIDFound</defaultConnectorLabel>
        <rules>
            <name>ContactIDNotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetContactID.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateNewContact</targetReference>
            </connector>
            <label>ContactIDNotFound</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if the contact has an e-mailadres</description>
        <name>EmailadresExists</name>
        <label>EmailadresExists</label>
        <locationX>974</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>GetContactBasedOnVariableContactID</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>HasNoEmailadres</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetContactID.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>ScreenGetNewPersonalEmail</targetReference>
            </connector>
            <label>HasNoEmailadres</label>
        </rules>
    </decisions>
    <decisions>
        <name>GeneralEmailadresExists</name>
        <label>GeneralEmailadresExists</label>
        <locationX>182</locationX>
        <locationY>1430</locationY>
        <defaultConnector>
            <targetReference>Assignment_2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NoGeneralEmailExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGeneralEmailAdres.Email</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenNoGeneralEmailAdresExists</targetReference>
            </connector>
            <label>NoGeneralEmailExists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if new e-mail is filled in or not</description>
        <name>NewEmailEmpty</name>
        <label>NewEmailEmpty</label>
        <locationX>380</locationX>
        <locationY>1214</locationY>
        <defaultConnector>
            <targetReference>UpdateContactWithNewEmail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NoNewPersonalEmail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PersonalEmailInput</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CheckboxAlgemeenEmailadres</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetGeneralEmailAdres</targetReference>
            </connector>
            <label>NoNewPersonalEmail</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <description>List recurring campaings with the same name</description>
        <name>CampaignList</name>
        <dataType>String</dataType>
        <displayField>CampaignDescription__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCampaignInfo.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>Recurring__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Campaign</object>
        <outputAssignments>
            <assignToReference>CampaignID</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <valueField>LandingPage__c</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <description>Dynamic subject line</description>
        <name>ConfirmationEmailSubjectLineDynamic</name>
        <dataType>String</dataType>
        <expression>{!GetAccountID.Name} &amp;&quot; - FARMAD : &quot;  &amp; CASE ({!GetCampaignInfo.Type},
&quot;RequestForContact&quot;, &quot;jouw aanvraag naar aanleiding van onze campagne &quot; &amp; {!GetCampaignInfo.Name},
&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <description>adds 2 days as due date based on flow interview date</description>
        <name>DueDateActivityAdd2Days</name>
        <dataType>DateTime</dataType>
        <expression>{!$Flow.InterviewStartTime} + 2</expression>
    </formulas>
    <formulas>
        <description>displays dynamic message in a chatter post based on the campaign type</description>
        <name>NotifyOwnerMessageDynamic</name>
        <dataType>String</dataType>
        <expression>&quot;Beste &quot; &amp; {!GetAccountID.Owner.FirstName} &amp; BR() 
&amp; {!GetContactBasedOnVariableContactID.FirstName} &amp; {!GetContactBasedOnVariableContactID.LastName} &amp; 
CASE(
    {!GetCampaignInfo.Type},
    &quot;RequestForContact&quot;,&quot; wenst gecontacteerd te worden naar aanleiding van onze mailingcampagne : &quot; &amp; {!GetCampaignInfo.Name} ,
&quot;Event&quot;,
&quot;Event&quot;, &quot; heeft zich ingeschreven voor het event &quot; &amp;{!GetCampaignInfo.CampaignDescription__c}
    &quot; &quot;
)</expression>
    </formulas>
    <formulas>
        <description>Creates title based on the Type of campaign</description>
        <name>SubscriptionFormDynamicTitle2</name>
        <dataType>String</dataType>
        <expression>CASE(TEXT({!GetCampaignInfo.Type}),
&quot;RequestForContact&quot;, &quot;Contactaanvraag: &quot; &amp; {!GetCampaignInfo.Name},
&quot;Webinar&quot;, &quot;Inschrijvingsformulier Webinar: &quot; &amp; {!GetCampaignInfo.Name},
&quot;Event&quot;, &quot;Inschrijvingsformulier Event: &quot; &amp; {!GetCampaignInfo.Name},
&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <description>creates a welcome message based on the campaign information</description>
        <name>SubscriptionFormDynamicWelcomeMessage</name>
        <dataType>String</dataType>
        <expression>CASE(
    TEXT({!GetCampaignInfo.Type}),
    &quot;RequestForContact&quot;, 
    &quot;Bedankt voor je interesse naar aanleiding van onze mailingcampagne &apos;&quot; &amp; {!GetCampaignInfo.Name} &amp; &quot;&apos;.&quot; &amp; BR() &amp; 
    &quot;Gelieve hieronder je naam, voornaam en APB-nummer in te geven en we contacteren je zo spoedig mogelijk.&quot;,
    &quot;Webinar&quot;, 
    &quot;Bedankt voor je interesse in ons webinar &apos;&quot; &amp; {!GetCampaignInfo.Name} &amp; &quot;&apos;.&quot; &amp; BR() &amp; 
    &quot;Gelieve hieronder je naam, voornaam en APB-nummer in te geven en we bezorgen je alle informatie en de link om te kunnen inloggen.&quot; &amp; BR() &amp; 
    &quot;Eén dag voor het webinar zullen we je nog een herinnering hiervoor sturen.&quot;,
    &quot;&quot;
)</expression>
    </formulas>
    <formulas>
        <description>Creates a Dynamic SubjectLine for the task</description>
        <name>TaskSubjectLineDynamic</name>
        <dataType>String</dataType>
        <expression>CASE(
    {!GetCampaignInfo.Type},
    &quot;RequestForContact&quot;, 
    &quot;Contacteer &quot; &amp;{!GetContactBasedOnVariableContactID.FirstName}&amp; &quot; &quot; &amp; {!GetContactBasedOnVariableContactID.LastName} &amp; &quot; van &quot; &amp; {!GetAccountID.Name} &amp; 
    &quot; (&quot; &amp; 
    IF(ISBLANK({!GetAccountID.Phone}), &quot;Geen telefoonnummer&quot;, {!GetAccountID.Phone}) &amp; 
    &quot;/&quot; &amp; 
    IF(ISBLANK({!GetContactBasedOnVariableContactID.MobilePhone}), &quot;Geen mobiel nummer&quot;,{!GetContactBasedOnVariableContactID.MobilePhone}) &amp; 
    &quot;) ivm campagne: &quot; &amp; {!GetCampaignInfo.Name},
    &quot; &quot;
)</expression>
    </formulas>
    <interviewLabel>SUBSCRIPTION_FORMTESTWEBINAR {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SUBSCRIPTION_FORMTESTWEBINARRepeated</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>ChatterByPass</name>
        <label>ChatterByPass</label>
        <locationX>677</locationX>
        <locationY>2870</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>NotifyOwnerMessageDynamic</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserID__c</field>
            <value>
                <elementReference>GetAccountID.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>ChatterPostEvent__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Records_6</name>
        <label>EmailByPass</label>
        <locationX>677</locationX>
        <locationY>2762</locationY>
        <connector>
            <targetReference>ChatterByPass</targetReference>
        </connector>
        <inputAssignments>
            <field>EmailBody__c</field>
            <value>
                <elementReference>ConfirmationEmailDynamicBody</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecipientEmail__c</field>
            <value>
                <elementReference>GetContactBasedOnVariableContactID.Email</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject__c</field>
            <value>
                <elementReference>ConfirmationEmailSubjectLineDynamic</elementReference>
            </value>
        </inputAssignments>
        <object>EmaiPostEvent__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateCampaignMember</name>
        <label>CreateCampaignMember</label>
        <locationX>677</locationX>
        <locationY>2330</locationY>
        <connector>
            <targetReference>ConfirmationScreen</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorDuplicateCampaignMember</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>CampaignId</field>
            <value>
                <elementReference>CampaignID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>ContactIDVariable</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Responded</stringValue>
            </value>
        </inputAssignments>
        <object>CampaignMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>Creates A new Contact</description>
        <name>CreateNewContact</name>
        <label>CreateNewContact</label>
        <locationX>380</locationX>
        <locationY>674</locationY>
        <connector>
            <targetReference>GetContactIDFronNewContact</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>GetAccountID.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>Name_Input.firstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>Name_Input.lastName</elementReference>
            </value>
        </inputAssignments>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>creates a new contact with a general emailadres</description>
        <name>CreateNewContactWithGeneralEmailadres</name>
        <label>CreateNewContactWithGeneralEmailadres</label>
        <locationX>50</locationX>
        <locationY>1646</locationY>
        <connector>
            <targetReference>UpdateContactEmailNewwithGeneralEmail</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>GetAccountID.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Email</field>
            <value>
                <elementReference>NewGeneralEmailAdres</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <stringValue>Apotheekteam</stringValue>
            </value>
        </inputAssignments>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>CreatesaATaskfortheAccountManager</description>
        <name>CreateTask</name>
        <label>CreateTask</label>
        <locationX>677</locationX>
        <locationY>2546</locationY>
        <connector>
            <targetReference>GetUserEmailadres</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>DueDateActivityAdd2Days</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CreatedDate</field>
            <value>
                <elementReference>$Flow.InterviewStartTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>GetCampaignInfo.MarketingComLink__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsRecurrence</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsReminderSet</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>GetAccountID.Owner.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>High</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ReminderDateTime</field>
            <value>
                <elementReference>DueDateActivityAdd2Days</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>TaskSubjectLineDynamic</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>GetAccountID.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>GetContactID.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>GetAccountInfo based on APB input</description>
        <name>GetAccountID</name>
        <label>GetAccountID</label>
        <locationX>677</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetContactID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>APB_SCN_Number__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>APB_Input</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This steps gets the campaign info</description>
        <name>GetCampaignInfo</name>
        <label>GetCampaignInfo</label>
        <locationX>677</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SubscriptionFOrm</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CampaignID</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Campaign</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCampaignInfoBaseonVariableCampaingID</name>
        <label>GetCampaignInfoBaseonVariableCampaingID</label>
        <locationX>677</locationX>
        <locationY>2222</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CreateCampaignMember</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CampaignID</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Campaign</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactBasedOnVariableContactID</name>
        <label>GetContactBasedOnVariableContactID</label>
        <locationX>677</locationX>
        <locationY>2114</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetCampaignInfoBaseonVariableCampaingID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ContactIDVariable</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get ContactID based on search on FirstName &amp; LastName</description>
        <name>GetContactID</name>
        <label>GetContactID</label>
        <locationX>677</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ContactIDExists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>FirstName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Name_Input.firstName</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Name_Input.lastName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactIDFronNewContact</name>
        <label>GetContactIDFronNewContact</label>
        <locationX>380</locationX>
        <locationY>782</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UpdateContactIDVariable</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAccountID.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Name_Input.lastName</elementReference>
            </value>
        </filters>
        <filters>
            <field>FirstName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Name_Input.firstName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetGeneralEmailAdres</name>
        <label>GetGeneralEmailAdres</label>
        <locationX>182</locationX>
        <locationY>1322</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GeneralEmailadresExists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAccountID.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Apotheekteam</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the general emailadres (contact apotheekteam with e-mailadres)</description>
        <name>GetGeneralEmailadress</name>
        <label>GetGeneralEmailadress</label>
        <locationX>380</locationX>
        <locationY>998</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ScreenGetNewPersonalEmail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAccountID.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Apotheekteam</stringValue>
            </value>
        </filters>
        <filters>
            <field>Email</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetUserEmailadres</name>
        <label>GetUserEmailadres</label>
        <locationX>677</locationX>
        <locationY>2654</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Records_6</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAccountID.Owner.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>add the e-mailadres to the contact</description>
        <name>UpdateContactWithNewEmail</name>
        <label>UpdateContactWithNewEmail</label>
        <locationX>578</locationX>
        <locationY>1322</locationY>
        <connector>
            <targetReference>UpdateContactEmailadres</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ContactIDVariable</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Email</field>
            <value>
                <elementReference>PersonalEmailInput</elementReference>
            </value>
        </inputAssignments>
        <object>Contact</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <description>describes confirmation of request</description>
        <name>ConfirmationScreen</name>
        <label>ConfirmationScreen</label>
        <locationX>677</locationX>
        <locationY>2438</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>CreateTask</targetReference>
        </connector>
        <fields>
            <name>ConfirmationMessageStatic</name>
            <fieldText>&lt;p&gt;Beste {!Name_Input.firstName},&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;We hebben je aanvraag goed ontvangen.&lt;/p&gt;&lt;p&gt;Jouw relatiebeheerder, &lt;strong&gt;{!GetAccountID.Owner.FirstName} {!GetAccountID.Owner.LastName}&lt;/strong&gt; is verwittigd en neemt zo spoedig mogelijk contact met je op.  We hebben ook nog een bevestiging hiervan naar je e-mailadres ({!ContactEmailadres}) gestuurd. &lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Wil je sneller schakelen kan je {!GetAccountID.Owner.FirstName} ook steeds zelf contacteren via telefoon &lt;strong&gt;{!GetAccountID.Owner.MobilePhone}&lt;/strong&gt; of E-mail &lt;strong&gt; {!GetAccountID.Owner.Email}&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Met vriendelijke groeten,&lt;/p&gt;&lt;p&gt;Het Farmad Team.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Shows Error message on error</description>
        <name>ErrorDuplicateCampaignMember</name>
        <label>ErrorDuplicateCampaignMember</label>
        <locationX>1282</locationX>
        <locationY>2438</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorMessageCreationDoubleMember</name>
            <fieldText>&lt;p&gt;Beste {!GetContactBasedOnVariableContactID.FirstName},&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;We hebben reeds een aanvraag voor jou genoteerd. &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>d</description>
        <name>ScreenGetNewPersonalEmail</name>
        <label>ScreenGetNewPersonalEmail</label>
        <locationX>380</locationX>
        <locationY>1106</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>NewEmailEmpty</targetReference>
        </connector>
        <fields>
            <name>ScreenContactHasNoEmail</name>
            <fieldText>&lt;p&gt;Beste {!GetContactID.FirstName},&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Bij nazicht in onze database zien we dat we geen persoonlijk e-mailadres van je hebben.  Kan je dit hieronder aanvullen? Zo kunnen we in de toekomst rechtstreeks met je communiceren. &lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Wil je je communicatie op een algemeen e-mailadres &lt;strong&gt;{!GetGeneralEmailAdres.Email}&lt;/strong&gt; van de apotheek ontvangen, dan kan je dat hieronder aanduiden en mag je het e-mailveld leeglaten.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CheckboxAlgemeenEmailadres</name>
            <dataType>Boolean</dataType>
            <fieldText>Ik wil de communicatie op het algemene e-mailadres van de apotheek ontvangen</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>PersonalEmailInput</name>
            <dataType>String</dataType>
            <fieldText>Jouw e-mailadres</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenNoGeneralEmailAdresExists</name>
        <label>ScreenNoGeneralEmailAdresExists</label>
        <locationX>50</locationX>
        <locationY>1538</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>CreateNewContactWithGeneralEmailadres</targetReference>
        </connector>
        <fields>
            <name>ScreenTextNoGeneralEmailAdresExists</name>
            <fieldText>&lt;p&gt;Er is geen algemeen e-mailadres gevonden van {!GetAccountID.Name} in onze database, gelieve deze hieronder in te vullen. &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>NewGeneralEmailAdres</name>
            <dataType>String</dataType>
            <fieldText>NewGeneralEmailAdres</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>This is a dynamic subscription form based on the campaign type and data</description>
        <name>SubscriptionFOrm</name>
        <label>SubscriptionForm</label>
        <locationX>677</locationX>
        <locationY>242</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>GetAccountID</targetReference>
        </connector>
        <fields>
            <name>SubscriptionFormTitle</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-family: tahoma; font-size: 36px; color: rgb(0, 0, 0);&quot;&gt;{!SubscriptionFormDynamicTitle2}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>WelcomeMessage</name>
            <fieldText>&lt;p&gt;{!SubscriptionFormDynamicWelcomeMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>APB_Input</name>
            <dataType>String</dataType>
            <fieldText>Geef hier je APB-nummer in</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Gelieve exact 6 cijfers in te vullen&lt;/p&gt;</errorMessage>
                <formulaExpression>REGEX({!APB_Input}, &quot;^[0-9]{6}$&quot;)</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Name_Input</name>
            <extensionName>flowruntime:name</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Geef hier je naam en voornaam in</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>disabled</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Kies_hier</name>
            <choiceReferences>CampaignList</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Kies hier</fieldText>
            <fieldType>MultiSelectPicklist</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>551</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetCampaignInfo</targetReference>
        </connector>
    </start>
    <status>InvalidDraft</status>
    <textTemplates>
        <name>ConfirmationEmailDynamicBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Beste {!GetContactBasedOnVariableContactID.FirstName},&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Bedankt voor je interesse naar aanleiding van onze &apos;{!GetCampaignInfo.Name}&apos;-mailing!&lt;/p&gt;&lt;p&gt;Ik neem zo spoedig mogelijk telefonisch contact met je op.&lt;/p&gt;&lt;p&gt;Wil je sneller schakelen kan je me altijd zelf contacteren op {!GetAccountID.Owner.MobilePhone}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Tot binnenkort,&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!GetAccountID.Owner.FirstName} {!GetAccountID.Owner.LastName}&lt;/p&gt;&lt;p&gt;Farmad NV&lt;/p&gt;&lt;p&gt;{!GetAccountID.Owner.Email}&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!GetAccountID.Owner.MobilePhone}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <description>makes a dynamic title based on the type of campaign</description>
        <name>SubscriptionFormDynamicTitle</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;{!SubscriptionFormDynamicTitle2}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <description>captures the campaign ID from the URL</description>
        <name>CampaignID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>prefered ContactEmailadres</description>
        <name>ContactEmailadres</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>GetContactBasedOnVariableContactID.Email</elementReference>
        </value>
    </variables>
    <variables>
        <description>holds the contactID</description>
        <name>ContactIDVariable</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>GetContactID.Id</elementReference>
        </value>
    </variables>
    <variables>
        <description>Store Emailaddress of the subscriber</description>
        <name>EmailContact</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>GetContactID.Email</elementReference>
        </value>
    </variables>
    <variables>
        <description>UserEmailAdress</description>
        <name>UserEmailadres</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
